name: "Setup Secret Dev Terraform"
on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/update_secret.yml"
      - "envs/dev/**/*"
      - "modules/**/*"

env:
  TF_LOG: INFO

jobs:
  Terraform:
    runs-on: ubuntu-latest
    environment: dev
    env:
      TF_VAR_service_account_token_1pass: ${{ secrets.service_account_token_1pass }}
      TF_VAR_gh_token: ${{ secrets.gh_token }}
      TF_VAR_vault_id: ${{ secrets.vault_id }}
      TF_VAR_uuid_id: ${{ secrets.uuid_id }}
      TF_VAR_gh_repository: ${{ secrets.gh_repository }}

    defaults:
      run:
        shell: bash
        working-directory: ./envs/dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup op CLI
        run: |
          sudo -s \
          curl -sS https://downloads.1password.com/linux/keys/1password.asc | \
          gpg --dearmor --output /usr/share/keyrings/1password-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/1password-archive-keyring.gpg] https://downloads.1password.com/linux/debian/$(dpkg --print-architecture) stable main" |
          tee /etc/apt/sources.list.d/1password.list
          mkdir -p /etc/debsig/policies/AC2D62742012EA22/
          curl -sS https://downloads.1password.com/linux/debian/debsig/1password.pol | \
          tee /etc/debsig/policies/AC2D62742012EA22/1password.pol
          mkdir -p /usr/share/debsig/keyrings/AC2D62742012EA22
          curl -sS https://downloads.1password.com/linux/keys/1password.asc | \
          gpg --dearmor --output /usr/share/debsig/keyrings/AC2D62742012EA22/debsig.gpg
          apt update && apt install 1password-cli
          op --version

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.4

      - name: Terraform version
        run: terraform -v

      - name: Terraform Init
        run: terraform init
        working-directory: ./envs/dev
        id: init

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -recursive
        working-directory: ./envs/dev

      - name: Terraform Validate
        id: validate
        run: terraform validate
        working-directory: ./envs/dev

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        working-directory: ./envs/dev
        
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
        run: terraform apply -auto-approve
        working-directory: ./envs/dev
